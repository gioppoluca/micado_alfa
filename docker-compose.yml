x-logging: &logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  postgres:
    image: groonga/pgroonga:${POSTGRES_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - ./db_init:/docker-entrypoint-initdb.d:ro
#      - type: tmpfs
#        target: /var/lib/postgresql/data
#        tmpfs:
#          size: 100000000
    logging: *logging

  keycloak:
    image: quay.io/keycloak/keycloak:${KC_VERSION}
    command: ["start-dev", "--import-realm"]
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
      KC_METRICS_ENABLED: "true"
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
      KC_REALM_NAME: ${KC_REALM_NAME}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - ${KC_PORT}:8080
    volumes:
      - ./keycloak/realm.json:/opt/keycloak/data/import/realm.json:ro
    logging: *logging

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
#    volumes:
#      - /path/to/local/d–∞ta:/root/redis
#      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=micado
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  backend:
    image: micadoproject/micado_backend:18.19.1
    stdin_open: true
    tty: true
    volumes:
      - type: volume
        source: backend
        target: /code
      - /var/run/docker.sock:/var/run/docker.sock:ro
    tmpfs: /tmp/translations
    ports:
      - "3000:3000"
    #     - "8080:8080"
    #    command: /bin/sh -c "cd backend && npm start"
    command: /bin/sh -c "bash"
    env_file:
      - .env
#    environment:
#    networks:
#      - micado_net
    logging: *logging
    
volumes:
  backend:
    driver: local
    driver_opts:
      type: none
      device: $PWD/application
      o: bind

